#!/bin/bash

function logAllBash(){
    # DESCRIPTION: Logs all of bash input and output to HOME/date_time_xxxx_shell.log
    [[ -d ${HOME}/LOGS ]] || mkdir "${HOME}/LOGS"
    export BASH_LOG=${HOME}/LOGS/$(date +"%d-%b-%y_%H-%M-%S")_shell.log;
    test "$(ps -o command= -p $PPID | awk '{print $1}')" == 'script' || (script -f ${BASH_LOG});
}

function mountSSHShare(){
    # DESCRIPTION: Mount remote SSH share on share directory.
    # ARGUMENT: mountSSHShare TUSER, TARGET, SHARE, PORT.
    # Ex: mountSSHShare converge 172.29.249.147 share 2200
    read -r TUSER TARGET SHARE PORT <<<$(echo ${@});
    if [ $# -lt 3 ]; then
        echo "[!] USAGE: mountSSHShare <user> <target> <share> [<port>]"
        return -1
    fi
    mkdir -p share;
    if [ -z "$PORT" ]; then
        sshfs "${TUSER}@${TARGET}:./${SHARE}" ./share;
    else
        sshfs -p "${PORT}" "${TUSER}@${TARGET}:./${SHARE}" ./share;
    fi
    return 0;
}

function unmountSSHShare(){
    # DESCRIPTION: Unmount remote SSH share from share directory.
    fusermount -u ./share
    return 0;
}

function uncolorFile() {
    # DESCRIPTION: Remove color codes from file.
    # ARGUMENTS: uncolorFile FILENAME
    FILENAME="$1"
    sed -i 's/\x1B\[[0-9;]*[a-zA-Z]//g' "$FILENAME"
    return 0;
}

function startSshuttle(){
    # DESCRIPTION: Start ssh tunnle.
    # ARGUMENT: startSshuttle TUSER, TARGET, PORT, SUBNET, EXCLUSIONS.
    # Ex: startSshuttle converge 172.29.249.111 2200 ./proxy-subnets.txt
    # Ex: startSshuttle converge 172.29.249.111 2200 ./proxy-subnets.txt ./exclusions.txt
    if [ $# -lt 4 ]; then
        echo '[!] Usage: startSshuttle <user> <host> <port> <subnet file> [<exclusions file>]'
        return -1
    fi
    read -r TUSER TARGET PORT SUBNET EXCLUSIONS <<<$(echo ${@});

    if [ -z "$EXCLUSIONS" ]; then
        sshuttle --dns -r "${TUSER}@${TARGET}:${PORT}" --subnets "${SUBNET}";
    else
        sshuttle --dns -r "${TUSER}@${TARGET}:${PORT}" --subnets "${SUBNET}" --exclude-from "${EXCLUSIONS}";
    fi
    return 0;
}

function setupIDF ()
{
    . ~/esp/esp-idf/export.sh
}
